// @generated by protoc-gen-connect-es v1.4.0
// @generated from file homecall/v1alpha/tenant_service.proto (package homecall.v1alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AcceptTenantInviteRequest, AcceptTenantInviteResponse, CreateTenantInviteRequest, CreateTenantInviteResponse, CreateTenantRequest, CreateTenantResponse, ListTenantInvitesRequest, ListTenantInvitesResponse, ListTenantMembersRequest, ListTenantMembersResponse, ListTenantsRequest, ListTenantsResponse, RemoveTenantInviteRequest, RemoveTenantInviteResponse, RemoveTenantMemberRequest, RemoveTenantMemberResponse, RemoveTenantRequest, RemoveTenantResponse, UpdateTenantMemberRequest, UpdateTenantMemberResponse } from "./tenant_service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * The TenantService service provides methods for managing tenants.
 * This service is intended to be used by the office application.
 *
 * @generated from service homecall.v1alpha.TenantService
 */
export const TenantService = {
  typeName: "homecall.v1alpha.TenantService",
  methods: {
    /**
     * CreateTenant creates a new tenant.
     *
     * @generated from rpc homecall.v1alpha.TenantService.CreateTenant
     */
    createTenant: {
      name: "CreateTenant",
      I: CreateTenantRequest,
      O: CreateTenantResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListTenants returns a list of all tenants the user has access to.
     *
     * @generated from rpc homecall.v1alpha.TenantService.ListTenants
     */
    listTenants: {
      name: "ListTenants",
      I: ListTenantsRequest,
      O: ListTenantsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * RemoveTenant removes a tenant.
     *
     * @generated from rpc homecall.v1alpha.TenantService.RemoveTenant
     */
    removeTenant: {
      name: "RemoveTenant",
      I: RemoveTenantRequest,
      O: RemoveTenantResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListTenantMembers returns a list of all tenant members.
     *
     * @generated from rpc homecall.v1alpha.TenantService.ListTenantMembers
     */
    listTenantMembers: {
      name: "ListTenantMembers",
      I: ListTenantMembersRequest,
      O: ListTenantMembersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * RemoveTenantMember removes a tenant member.
     *
     * @generated from rpc homecall.v1alpha.TenantService.RemoveTenantMember
     */
    removeTenantMember: {
      name: "RemoveTenantMember",
      I: RemoveTenantMemberRequest,
      O: RemoveTenantMemberResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateTenantMember updates a tenant member.
     *
     * @generated from rpc homecall.v1alpha.TenantService.UpdateTenantMember
     */
    updateTenantMember: {
      name: "UpdateTenantMember",
      I: UpdateTenantMemberRequest,
      O: UpdateTenantMemberResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateTenantInvite creates a new tenant invite.
     *
     * @generated from rpc homecall.v1alpha.TenantService.CreateTenantInvite
     */
    createTenantInvite: {
      name: "CreateTenantInvite",
      I: CreateTenantInviteRequest,
      O: CreateTenantInviteResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListTenantInvites returns a list of all tenant invites.
     *
     * @generated from rpc homecall.v1alpha.TenantService.ListTenantInvites
     */
    listTenantInvites: {
      name: "ListTenantInvites",
      I: ListTenantInvitesRequest,
      O: ListTenantInvitesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * RemoveTenantInvite removes a tenant invite.
     *
     * @generated from rpc homecall.v1alpha.TenantService.RemoveTenantInvite
     */
    removeTenantInvite: {
      name: "RemoveTenantInvite",
      I: RemoveTenantInviteRequest,
      O: RemoveTenantInviteResponse,
      kind: MethodKind.Unary,
    },
    /**
     * AcceptTenantInvite accepts a tenant invite.
     *
     * @generated from rpc homecall.v1alpha.TenantService.AcceptTenantInvite
     */
    acceptTenantInvite: {
      name: "AcceptTenantInvite",
      I: AcceptTenantInviteRequest,
      O: AcceptTenantInviteResponse,
      kind: MethodKind.Unary,
    },
  }
};
