// @generated by protoc-gen-es v1.8.0
// @generated from file homecall/v1alpha/tenant_service.proto (package homecall.v1alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Role represents a role.
 *
 * @generated from enum homecall.v1alpha.Role
 */
export declare enum Role {
  /**
   * The role is unknown.
   *
   * @generated from enum value: ROLE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The role is an admin.
   *
   * @generated from enum value: ROLE_ADMIN = 1;
   */
  ADMIN = 1,

  /**
   * The role is a member.
   *
   * @generated from enum value: ROLE_MEMBER = 2;
   */
  MEMBER = 2,
}

/**
 * CreateTenantRequest is the request message for the CreateTenant method.
 *
 * @generated from message homecall.v1alpha.CreateTenantRequest
 */
export declare class CreateTenantRequest extends Message<CreateTenantRequest> {
  /**
   * The name of the tenant.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  constructor(data?: PartialMessage<CreateTenantRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.CreateTenantRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateTenantRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateTenantRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateTenantRequest;

  static equals(a: CreateTenantRequest | PlainMessage<CreateTenantRequest> | undefined, b: CreateTenantRequest | PlainMessage<CreateTenantRequest> | undefined): boolean;
}

/**
 * CreateTenantResponse is the response message for the CreateTenant method.
 *
 * @generated from message homecall.v1alpha.CreateTenantResponse
 */
export declare class CreateTenantResponse extends Message<CreateTenantResponse> {
  /**
   * The tenant that was created.
   *
   * @generated from field: homecall.v1alpha.Tenant tenant = 1;
   */
  tenant?: Tenant;

  constructor(data?: PartialMessage<CreateTenantResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.CreateTenantResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateTenantResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateTenantResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateTenantResponse;

  static equals(a: CreateTenantResponse | PlainMessage<CreateTenantResponse> | undefined, b: CreateTenantResponse | PlainMessage<CreateTenantResponse> | undefined): boolean;
}

/**
 * ListTenantsRequest is the request message for the ListTenants method.
 *
 * @generated from message homecall.v1alpha.ListTenantsRequest
 */
export declare class ListTenantsRequest extends Message<ListTenantsRequest> {
  constructor(data?: PartialMessage<ListTenantsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.ListTenantsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListTenantsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListTenantsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListTenantsRequest;

  static equals(a: ListTenantsRequest | PlainMessage<ListTenantsRequest> | undefined, b: ListTenantsRequest | PlainMessage<ListTenantsRequest> | undefined): boolean;
}

/**
 * ListTenantsResponse is the response message for the ListTenants method.
 *
 * @generated from message homecall.v1alpha.ListTenantsResponse
 */
export declare class ListTenantsResponse extends Message<ListTenantsResponse> {
  /**
   * The list of tenants.
   *
   * @generated from field: repeated homecall.v1alpha.Tenant tenants = 1;
   */
  tenants: Tenant[];

  constructor(data?: PartialMessage<ListTenantsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.ListTenantsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListTenantsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListTenantsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListTenantsResponse;

  static equals(a: ListTenantsResponse | PlainMessage<ListTenantsResponse> | undefined, b: ListTenantsResponse | PlainMessage<ListTenantsResponse> | undefined): boolean;
}

/**
 * RemoveTenantRequest is the request message for the RemoveTenant method.
 *
 * @generated from message homecall.v1alpha.RemoveTenantRequest
 */
export declare class RemoveTenantRequest extends Message<RemoveTenantRequest> {
  /**
   * The ID of the tenant to remove.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<RemoveTenantRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.RemoveTenantRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveTenantRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveTenantRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveTenantRequest;

  static equals(a: RemoveTenantRequest | PlainMessage<RemoveTenantRequest> | undefined, b: RemoveTenantRequest | PlainMessage<RemoveTenantRequest> | undefined): boolean;
}

/**
 * RemoveTenantResponse is the response message for the RemoveTenant method.
 *
 * @generated from message homecall.v1alpha.RemoveTenantResponse
 */
export declare class RemoveTenantResponse extends Message<RemoveTenantResponse> {
  constructor(data?: PartialMessage<RemoveTenantResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.RemoveTenantResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveTenantResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveTenantResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveTenantResponse;

  static equals(a: RemoveTenantResponse | PlainMessage<RemoveTenantResponse> | undefined, b: RemoveTenantResponse | PlainMessage<RemoveTenantResponse> | undefined): boolean;
}

/**
 * ListTenantMembersRequest is the request message for the ListTenantMembers method.
 *
 * @generated from message homecall.v1alpha.ListTenantMembersRequest
 */
export declare class ListTenantMembersRequest extends Message<ListTenantMembersRequest> {
  /**
   * The ID of the tenant to list the members of.
   *
   * @generated from field: string tenant_id = 1;
   */
  tenantId: string;

  constructor(data?: PartialMessage<ListTenantMembersRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.ListTenantMembersRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListTenantMembersRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListTenantMembersRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListTenantMembersRequest;

  static equals(a: ListTenantMembersRequest | PlainMessage<ListTenantMembersRequest> | undefined, b: ListTenantMembersRequest | PlainMessage<ListTenantMembersRequest> | undefined): boolean;
}

/**
 * ListTenantMembersResponse is the response message for the ListTenantMembers method.
 *
 * @generated from message homecall.v1alpha.ListTenantMembersResponse
 */
export declare class ListTenantMembersResponse extends Message<ListTenantMembersResponse> {
  /**
   * The list of tenant members.
   *
   * @generated from field: repeated homecall.v1alpha.TenantMember tenant_members = 1;
   */
  tenantMembers: TenantMember[];

  constructor(data?: PartialMessage<ListTenantMembersResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.ListTenantMembersResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListTenantMembersResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListTenantMembersResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListTenantMembersResponse;

  static equals(a: ListTenantMembersResponse | PlainMessage<ListTenantMembersResponse> | undefined, b: ListTenantMembersResponse | PlainMessage<ListTenantMembersResponse> | undefined): boolean;
}

/**
 * RemoveTenantMemberRequest is the request message for the RemoveTenantMember method.
 *
 * @generated from message homecall.v1alpha.RemoveTenantMemberRequest
 */
export declare class RemoveTenantMemberRequest extends Message<RemoveTenantMemberRequest> {
  /**
   * The ID of the tenant member.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<RemoveTenantMemberRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.RemoveTenantMemberRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveTenantMemberRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveTenantMemberRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveTenantMemberRequest;

  static equals(a: RemoveTenantMemberRequest | PlainMessage<RemoveTenantMemberRequest> | undefined, b: RemoveTenantMemberRequest | PlainMessage<RemoveTenantMemberRequest> | undefined): boolean;
}

/**
 * RemoveTenantMemberResponse is the response message for the RemoveTenantMember method.
 *
 * @generated from message homecall.v1alpha.RemoveTenantMemberResponse
 */
export declare class RemoveTenantMemberResponse extends Message<RemoveTenantMemberResponse> {
  constructor(data?: PartialMessage<RemoveTenantMemberResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.RemoveTenantMemberResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveTenantMemberResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveTenantMemberResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveTenantMemberResponse;

  static equals(a: RemoveTenantMemberResponse | PlainMessage<RemoveTenantMemberResponse> | undefined, b: RemoveTenantMemberResponse | PlainMessage<RemoveTenantMemberResponse> | undefined): boolean;
}

/**
 * UpdateTenantMemberRequest is the request message for the UpdateTenantMember method.
 *
 * @generated from message homecall.v1alpha.UpdateTenantMemberRequest
 */
export declare class UpdateTenantMemberRequest extends Message<UpdateTenantMemberRequest> {
  /**
   * The ID of the tenant member.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The role of the member.
   *
   * @generated from field: homecall.v1alpha.Role role = 3;
   */
  role: Role;

  constructor(data?: PartialMessage<UpdateTenantMemberRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.UpdateTenantMemberRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateTenantMemberRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateTenantMemberRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateTenantMemberRequest;

  static equals(a: UpdateTenantMemberRequest | PlainMessage<UpdateTenantMemberRequest> | undefined, b: UpdateTenantMemberRequest | PlainMessage<UpdateTenantMemberRequest> | undefined): boolean;
}

/**
 * UpdateTenantMemberResponse is the response message for the UpdateTenantMember method.
 *
 * @generated from message homecall.v1alpha.UpdateTenantMemberResponse
 */
export declare class UpdateTenantMemberResponse extends Message<UpdateTenantMemberResponse> {
  constructor(data?: PartialMessage<UpdateTenantMemberResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.UpdateTenantMemberResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateTenantMemberResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateTenantMemberResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateTenantMemberResponse;

  static equals(a: UpdateTenantMemberResponse | PlainMessage<UpdateTenantMemberResponse> | undefined, b: UpdateTenantMemberResponse | PlainMessage<UpdateTenantMemberResponse> | undefined): boolean;
}

/**
 * CreateTenantInviteRequest is the request message for the CreateTenantInvite method.
 *
 * @generated from message homecall.v1alpha.CreateTenantInviteRequest
 */
export declare class CreateTenantInviteRequest extends Message<CreateTenantInviteRequest> {
  /**
   * The ID of the tenant to create the invite for.
   *
   * @generated from field: string tenant_id = 1;
   */
  tenantId: string;

  /**
   * The email of the user to invite.
   *
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * The role of the member.
   *
   * @generated from field: homecall.v1alpha.Role role = 3;
   */
  role: Role;

  constructor(data?: PartialMessage<CreateTenantInviteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.CreateTenantInviteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateTenantInviteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateTenantInviteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateTenantInviteRequest;

  static equals(a: CreateTenantInviteRequest | PlainMessage<CreateTenantInviteRequest> | undefined, b: CreateTenantInviteRequest | PlainMessage<CreateTenantInviteRequest> | undefined): boolean;
}

/**
 * CreateTenantInviteResponse is the response message for the CreateTenantInvite method.
 *
 * @generated from message homecall.v1alpha.CreateTenantInviteResponse
 */
export declare class CreateTenantInviteResponse extends Message<CreateTenantInviteResponse> {
  /**
   * The tenant invite that was created.
   *
   * @generated from field: homecall.v1alpha.TenantInvite tenant_invite = 1;
   */
  tenantInvite?: TenantInvite;

  constructor(data?: PartialMessage<CreateTenantInviteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.CreateTenantInviteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateTenantInviteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateTenantInviteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateTenantInviteResponse;

  static equals(a: CreateTenantInviteResponse | PlainMessage<CreateTenantInviteResponse> | undefined, b: CreateTenantInviteResponse | PlainMessage<CreateTenantInviteResponse> | undefined): boolean;
}

/**
 * ListTenantInvitesRequest is the request message for the ListTenantInvites method.
 *
 * @generated from message homecall.v1alpha.ListTenantInvitesRequest
 */
export declare class ListTenantInvitesRequest extends Message<ListTenantInvitesRequest> {
  /**
   * The ID of the tenant to list the invites of.
   * Leave empty to list all invites the user can respond to.
   *
   * @generated from field: string tenant_id = 1;
   */
  tenantId: string;

  constructor(data?: PartialMessage<ListTenantInvitesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.ListTenantInvitesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListTenantInvitesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListTenantInvitesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListTenantInvitesRequest;

  static equals(a: ListTenantInvitesRequest | PlainMessage<ListTenantInvitesRequest> | undefined, b: ListTenantInvitesRequest | PlainMessage<ListTenantInvitesRequest> | undefined): boolean;
}

/**
 * ListTenantInvitesResponse is the response message for the ListTenantInvites method.
 *
 * @generated from message homecall.v1alpha.ListTenantInvitesResponse
 */
export declare class ListTenantInvitesResponse extends Message<ListTenantInvitesResponse> {
  /**
   * The list of tenant invites.
   *
   * @generated from field: repeated homecall.v1alpha.TenantInvite tenant_invites = 1;
   */
  tenantInvites: TenantInvite[];

  constructor(data?: PartialMessage<ListTenantInvitesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.ListTenantInvitesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListTenantInvitesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListTenantInvitesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListTenantInvitesResponse;

  static equals(a: ListTenantInvitesResponse | PlainMessage<ListTenantInvitesResponse> | undefined, b: ListTenantInvitesResponse | PlainMessage<ListTenantInvitesResponse> | undefined): boolean;
}

/**
 * RemoveTenantInviteRequest is the request message for the RemoveTenantInvite method.
 *
 * @generated from message homecall.v1alpha.RemoveTenantInviteRequest
 */
export declare class RemoveTenantInviteRequest extends Message<RemoveTenantInviteRequest> {
  /**
   * The ID of the tenant invite to remove.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<RemoveTenantInviteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.RemoveTenantInviteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveTenantInviteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveTenantInviteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveTenantInviteRequest;

  static equals(a: RemoveTenantInviteRequest | PlainMessage<RemoveTenantInviteRequest> | undefined, b: RemoveTenantInviteRequest | PlainMessage<RemoveTenantInviteRequest> | undefined): boolean;
}

/**
 * RemoveTenantInviteResponse is the response message for the RemoveTenantInvite method.
 *
 * @generated from message homecall.v1alpha.RemoveTenantInviteResponse
 */
export declare class RemoveTenantInviteResponse extends Message<RemoveTenantInviteResponse> {
  constructor(data?: PartialMessage<RemoveTenantInviteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.RemoveTenantInviteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveTenantInviteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveTenantInviteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveTenantInviteResponse;

  static equals(a: RemoveTenantInviteResponse | PlainMessage<RemoveTenantInviteResponse> | undefined, b: RemoveTenantInviteResponse | PlainMessage<RemoveTenantInviteResponse> | undefined): boolean;
}

/**
 * AcceptTenantInviteRequest is the request message for the AcceptTenantInvite method.
 *
 * @generated from message homecall.v1alpha.AcceptTenantInviteRequest
 */
export declare class AcceptTenantInviteRequest extends Message<AcceptTenantInviteRequest> {
  /**
   * The ID of the tenant invite to accept.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<AcceptTenantInviteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.AcceptTenantInviteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AcceptTenantInviteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AcceptTenantInviteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AcceptTenantInviteRequest;

  static equals(a: AcceptTenantInviteRequest | PlainMessage<AcceptTenantInviteRequest> | undefined, b: AcceptTenantInviteRequest | PlainMessage<AcceptTenantInviteRequest> | undefined): boolean;
}

/**
 * AcceptTenantInviteResponse is the response message for the AcceptTenantInvite method.
 *
 * @generated from message homecall.v1alpha.AcceptTenantInviteResponse
 */
export declare class AcceptTenantInviteResponse extends Message<AcceptTenantInviteResponse> {
  constructor(data?: PartialMessage<AcceptTenantInviteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.AcceptTenantInviteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AcceptTenantInviteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AcceptTenantInviteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AcceptTenantInviteResponse;

  static equals(a: AcceptTenantInviteResponse | PlainMessage<AcceptTenantInviteResponse> | undefined, b: AcceptTenantInviteResponse | PlainMessage<AcceptTenantInviteResponse> | undefined): boolean;
}

/**
 * Tenant represents a tenant.
 *
 * @generated from message homecall.v1alpha.Tenant
 */
export declare class Tenant extends Message<Tenant> {
  /**
   * The ID of the tenant.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The name of the tenant.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The maximum number of devices the tenant can have.
   *
   * @generated from field: int64 max_devices = 3;
   */
  maxDevices: bigint;

  constructor(data?: PartialMessage<Tenant>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.Tenant";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Tenant;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Tenant;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Tenant;

  static equals(a: Tenant | PlainMessage<Tenant> | undefined, b: Tenant | PlainMessage<Tenant> | undefined): boolean;
}

/**
 * TenantMember represents a tenant member.
 *
 * @generated from message homecall.v1alpha.TenantMember
 */
export declare class TenantMember extends Message<TenantMember> {
  /**
   * The ID of the tenant member.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The ID of the tenant.
   *
   * @generated from field: string tenant_id = 2;
   */
  tenantId: string;

  /**
   * The ID of the user.
   *
   * @generated from field: string subject = 3;
   */
  subject: string;

  /**
   * The email of the user.
   *
   * @generated from field: string verified_email = 4;
   */
  verifiedEmail: string;

  /**
   * The name of the user.
   *
   * @generated from field: string display_name = 5;
   */
  displayName: string;

  /**
   * The role of the member.
   *
   * @generated from field: homecall.v1alpha.Role role = 6;
   */
  role: Role;

  constructor(data?: PartialMessage<TenantMember>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.TenantMember";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TenantMember;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TenantMember;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TenantMember;

  static equals(a: TenantMember | PlainMessage<TenantMember> | undefined, b: TenantMember | PlainMessage<TenantMember> | undefined): boolean;
}

/**
 * TenantInvite represents a tenant invite.
 *
 * @generated from message homecall.v1alpha.TenantInvite
 */
export declare class TenantInvite extends Message<TenantInvite> {
  /**
   * The ID of the tenant invite.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The ID of the tenant.
   *
   * @generated from field: string tenant_id = 2;
   */
  tenantId: string;

  /**
   * The email of the user.
   *
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * The role of the member.
   *
   * @generated from field: homecall.v1alpha.Role role = 4;
   */
  role: Role;

  /**
   * The name of the tenant.
   *
   * @generated from field: string tenant_name = 5;
   */
  tenantName: string;

  constructor(data?: PartialMessage<TenantInvite>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "homecall.v1alpha.TenantInvite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TenantInvite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TenantInvite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TenantInvite;

  static equals(a: TenantInvite | PlainMessage<TenantInvite> | undefined, b: TenantInvite | PlainMessage<TenantInvite> | undefined): boolean;
}
