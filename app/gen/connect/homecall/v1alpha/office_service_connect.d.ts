// @generated by protoc-gen-connect-es v1.4.0
// @generated from file homecall/v1alpha/office_service.proto (package homecall.v1alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateDeviceRequest, CreateDeviceResponse, ListDevicesRequest, ListDevicesResponse, RemoveDeviceRequest, RemoveDeviceResponse, StartCallRequest, StartCallResponse, UpdateDeviceRequest, UpdateDeviceResponse, WaitForEnrollmentRequest, WaitForEnrollmentResponse } from "./office_service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * The OfficeService provides methods for managing devices and calls.
 * This service is intended to be used by the office application.
 *
 * @generated from service homecall.v1alpha.OfficeService
 */
export declare const OfficeService: {
  readonly typeName: "homecall.v1alpha.OfficeService",
  readonly methods: {
    /**
     * CreateDevice creates a new device.
     *
     * @generated from rpc homecall.v1alpha.OfficeService.CreateDevice
     */
    readonly createDevice: {
      readonly name: "CreateDevice",
      readonly I: typeof CreateDeviceRequest,
      readonly O: typeof CreateDeviceResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListDevices returns a list of all devices.
     *
     * @generated from rpc homecall.v1alpha.OfficeService.ListDevices
     */
    readonly listDevices: {
      readonly name: "ListDevices",
      readonly I: typeof ListDevicesRequest,
      readonly O: typeof ListDevicesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * RemoveDevice removes a device from the list of devices.
     *
     * @generated from rpc homecall.v1alpha.OfficeService.RemoveDevice
     */
    readonly removeDevice: {
      readonly name: "RemoveDevice",
      readonly I: typeof RemoveDeviceRequest,
      readonly O: typeof RemoveDeviceResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateDevice updates the device.
     *
     * @generated from rpc homecall.v1alpha.OfficeService.UpdateDevice
     */
    readonly updateDevice: {
      readonly name: "UpdateDevice",
      readonly I: typeof UpdateDeviceRequest,
      readonly O: typeof UpdateDeviceResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * StartCall starts a call with the specified device.
     *
     * @generated from rpc homecall.v1alpha.OfficeService.StartCall
     */
    readonly startCall: {
      readonly name: "StartCall",
      readonly I: typeof StartCallRequest,
      readonly O: typeof StartCallResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * WaitForEnrollment is called to get notified about device enrollment.
     * This call is long-lived and will return when device is enrolled.
     *
     * @generated from rpc homecall.v1alpha.OfficeService.WaitForEnrollment
     */
    readonly waitForEnrollment: {
      readonly name: "WaitForEnrollment",
      readonly I: typeof WaitForEnrollmentRequest,
      readonly O: typeof WaitForEnrollmentResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
  }
};
