name: Release
on:
    push:
        branches:
        - main
jobs:
    generate-buf:
        name: Generate Buf
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        - uses: bufbuild/buf-action@v1
          with:
            setup_only: true
        - run: buf generate
        - uses: actions/upload-artifact@v4
          with:
            name: buf-go
            path: ${{ github.workspace }}/backend/gen/connect
            if-no-files-found: error
        - uses: actions/upload-artifact@v4
          with:
            name: buf-frontend
            path: ${{ github.workspace }}/frontend/gen/connect
            if-no-files-found: error
        - uses: actions/upload-artifact@v4
          with:
            name: buf-app
            path: ${{ github.workspace }}/app/gen/connect
            if-no-files-found: error

    generate-jet:
        name: Generate Jet
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-go@v5
          with:
            go-version: '^1.21.0' # The Go version to download (if necessary) and use.
        - run: go run tools/jet/main.go
          working-directory: backend
        - uses: actions/upload-artifact@v4
          with:
            name: jet-go
            path: ${{ github.workspace }}/backend/gen/jetdb
            if-no-files-found: error

    be-docker-build:
        name: Backend Docker build
        runs-on: ubuntu-latest
        needs:
          - generate-jet
          - generate-buf
        steps:
        - uses: actions/checkout@v4
        - name: Login to GitHub Container Registry
          run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        - uses: actions/download-artifact@v4
          with:
            name: buf-go
        - uses: actions/download-artifact@v4
          with:
            name: jet-go
        - name: Build the Docker image
          run: docker build ./backend -t ghcr.io/${{ github.repository }}/backend:v0.0.0-${{ github.sha }}
        - name: Push the Docker image
          run: docker push ghcr.io/${{ github.repository }}/backend:v0.0.0-${{ github.sha }}
    fe-docker-build:
        name: Frontend Docker build
        runs-on: ubuntu-latest
        needs:
          - generate-buf
        steps:
        - uses: actions/checkout@v4
        - name: Login to GitHub Container Registry
          run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        - uses: actions/download-artifact@v4
          with:
            name: buf-frontend
        - name: Build the Docker image
          run: docker build ./frontend -t ghcr.io/${{ github.repository }}/frontend:v0.0.0-${{ github.sha }}
        - name: Push the Docker image
          run: docker push ghcr.io/${{ github.repository }}/frontend:v0.0.0-${{ github.sha }}
    fe-tarball-build:
      name: Frontend Tarball build
      runs-on: ubuntu-latest
      needs:
        - generate-buf
      steps:
        - uses: actions/checkout@v4
        - name: Install dependencies
          run: npm install
          working-directory: frontend
        - uses: actions/download-artifact@v4
          with:
            name: buf-frontend
        - name: Build the tarball
          run: npm run build
          working-directory: frontend
        - name: Archive the tarball
          run: tar -czf frontend.tar.gz dist
          working-directory: frontend
        - name: Upload the tarball
          uses: actions/upload-artifact@v4
          with:
            name: frontend
            path: ${{ github.workspace }}/frontend/frontend.tar.gz
    publish-release:
        name: Publish Release
        runs-on: ubuntu-latest
        needs:
          - be-docker-build
          - fe-docker-build
          - fe-tarball-build
        steps:
        - uses: actions/checkout@v4
        - name: Download the tarball
          uses: actions/download-artifact@v4
          with:
            name: frontend
        - name: Release
          uses: softprops/action-gh-release@v2
          with:
            files: |
              frontend/frontend.tar.gz
            name: Release v0.0.0-${{ github.sha }}
            tag_name: v0.0.0-${{ github.sha }}
            body: |
              Release v0.0.0-${{ github.sha }}
              - Backend: ghcr.io/${{ github.repository }}/backend:v0.0.0-${{ github.sha }}
              - Frontend: ghcr.io/${{ github.repository }}/frontend:v0.0.0-${{ github.sha }}
              - Frontend: frontend.tar.gz
            make_latest: true
    tag-release:
        name: Tag Release
        runs-on: ubuntu-latest
        needs:
          - publish-release
        steps:
        - uses: actions/checkout@v4
        - name: Tag
          run: git tag v0.0.0-${{ github.sha }}
        - name: Tag
          run: git tag latest -f
        - name: Push tag
          run: git push origin v0.0.0-${{ github.sha }}
        - name: Push tag
          run: git push origin latest -f
    tag-containers:
        name: Tag Containers
        runs-on: ubuntu-latest
        needs:
          - publish-release
        steps:
        - uses: actions/checkout@v4
        - name: Login to GitHub Container Registry
          run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        - name: Tag
          run: docker tag ghcr.io/${{ github.repository }}/backend:v0.0.0-${{ github.sha }} ghcr.io/${{ github.repository }}/backend:latest
        - name: Tag
          run: docker tag ghcr.io/${{ github.repository }}/frontend:v0.0.0-${{ github.sha }} ghcr.io/${{ github.repository }}/frontend:latest
        - name: Push tag
          run: docker push ghcr.io/${{ github.repository }}/backend:latest
        - name: Push tag
          run: docker push ghcr.io/${{ github.repository }}/frontend:latest
