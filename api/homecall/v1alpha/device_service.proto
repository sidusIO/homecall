syntax = "proto3";

package homecall.v1alpha;

option go_package = "sidus.io/pgc/homecall/v1alpha;homecall";

import "homecall/v1alpha/settings.proto";

// DeviceService is the service that devices talk to in order to enroll and receive calls.
service DeviceService {
    // Enroll is called by a device to enroll with the service.
    // This call is only called once per device during the initial setup.
    rpc Enroll(EnrollRequest) returns (EnrollResponse);

    // UpdateNotificationToken is called by a device to update the FCM token.
    // This token is used to send push notifications to the device.
    // This should be called whenever the FCM token changes.
    // It should also be called when the device is first enrolled and every 30 minutes to mark the device as active.
    //
    // Call is authenticated using the a jwt token signed with the device's private key.
    // The subject of the jwt token must be the device ID.
    //
    // This call is idempotent.
    rpc UpdateNotificationToken(UpdateNotificationTokenRequest) returns (UpdateNotificationTokenResponse);

    // GetCall returns a call for the device to join.
    // Call is authenticated using the a jwt token signed with the device's private key.
    // The subject of the jwt token must be the device ID.
    rpc GetCallDetails(GetCallDetailsRequest) returns (GetCallDetailsResponse);
}

// EnrollRequest is the request to enroll a device.
message EnrollRequest {
    // The enrollment key is a secret key that is used to enroll a device.
    // This key is generated by the service and shared with the device via the office app.
    string enrollment_key = 1;
    // The public key is the public key of the device that is used to encrypt the call information.
    // This key is generated by the device and shared with the service during enrollment.
    // The public key is a PEM encoded RSA public key.
    string public_key = 2;
}

// EnrollResponse is the response to enrolling a device.
message EnrollResponse {
    // The device ID is the unique identifier for the device.
    string device_id = 1;
    // The device settings are the settings for the device.
    // These settings are used to configure the device for the user.
    DeviceSettings settings = 2;
    // The name of the device.
    string name = 3;
}

// GetCallDetailsRequest is the request to join a call.
// Token is passed in the Authorization header as a bearer token.
message GetCallDetailsRequest {
    // The call ID is the unique identifier for the call.
    string call_id = 1;
}

// GetCallDetailsResponse is the response to join a call.
message GetCallDetailsResponse {
    // The room ID is the unique identifier for the jitsi room.
    // Used to join the call.
    string jitsi_room_id = 1;
    // The jitsi jwt is the jwt token used to authenticate the device with jitsi.
    string jitsi_jwt = 2;
    // The call ID is the unique identifier for the call.
    string call_id = 3;
}

// UpdateNotificationTokenRequest is the request to update the FCM token.
message UpdateNotificationTokenRequest {
    // The notification_token is the token used to send push notifications to the device.
    string notification_token = 1;
}

// UpdateNotificationTokenResponse is the response to updating the FCM token.
message UpdateNotificationTokenResponse {}